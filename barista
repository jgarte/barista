#!/bin/env janet
(import sh)
(import neil/tell :prefix "")
(import neil/utils)

(defn capt [label]
  ~(* (some (if-not ,label 1)) ,label :s+ '(some (if-not "\n" 1))))

(def capg
  ~(* ,(capt "state:")
      ,(capt "energy-rate:")
      (? ,(capt '(* "time to " (<- (+ "empty" "full")) ":")))
      ,(capt "percentage:")))


(defn main [_ &opt ntb]
  (default ntb false)
  (def neil (init))
  (forever
    (def ts (string/trim (sh/$< date)))
    (def ut (string "up " ((string/split "up " (string/trim (sh/$< uptime))) 1)))
    (def task
      (match
        (protect
          (if-let [r (:task/running neil)]
            (let [[rid {:name n :project pid :work-intervals iw :state s}] r
                  {:name p} (:by-id neil pid)
                  {:start s :note t} (last iw)]
              (string (utils/durf (- (os/time) s)) " @" p " - #" rid " " n ""))
            (string "Last ran: " (get-in (:task/last-ran neil) [1 :name]))))
        [true m] m
        [false _] "Office err!"))
    (if ntb
      (let [light (string/slice (sh/$< light) 0 -5)
            b (sh/$< upower -i /org/freedesktop/UPower/devices/battery_BAT0)
            batt (match (peg/match capg b)
                   [(s (= s "fully-charged")) e p] "âœ”"
                   [s e w t p] (string p " " e " " s " to " w " in " t))]
        (prin task " | " light "% | " batt " | " ts))
      (prin task " | " ut " | " ts)) (flush)
    (os/sleep 1)))
