#!/bin/env janet
(import sh)
(import neil/tell :prefix "")
(import neil/utils)

(defn capt [label]
  ~(* (some (if-not ,label 1)) ,label :s+ '(some (if-not "\n" 1))))

(def capg
  ~(* ,(capt "state:")
      ,(capt "energy-rate:")
      (? ,(capt '(* "time to " (<- (+ "empty" "full")) ":")))
      ,(capt "percentage:")))

(def days ["ne" "po" "ůt" "st" "čt" "pá" "so"])


(defn main [_ &opt ntb]
  (default ntb false)
  (tell
    (forever
      (def n (os/date (os/time) true))
      (def ts (string/format "%s %i/%s/%s %i:%s:%s"
                             (days (n :week-day))
                             (- (n :year) 2000)
                             (utils/pad (inc (n :month)))
                             (utils/pad (inc (n :month-day)))
                             (n :hours)
                             (utils/pad (n :minutes))
                             (utils/pad (n :seconds))))
      (def task
        (match
          (protect
            (if-let [r (:task/running neil)]
              (let [[rid {:name n :project pid :work-intervals iw}] r
                    {:name p :client cid} (:by-id neil pid)
                    {:abbrev c} (:by-id neil cid)
                    {:start s :note t} (last iw)]
                (string/format "\u25b6 %s $%s @%s - #%s %s" (utils/durf (- (os/time) s)) c p rid n))
              (let [[rid {:name n :project pid :work-intervals iw}] (:task/last-ran neil)
                    {:name p :client cid} (:by-id neil pid)
                    {:abbrev c} (:by-id neil cid)
                    dur (reduce (fn [r x] (+ r (- (x :end) (x :start)))) 0 iw)]
                (string/format "\u25fc %s $%s @%s #%s - %s" (utils/durf dur) c p rid n))))
          [true m] m
          [false _] "Office err!"))
      (if ntb
        (let [light (string/slice (sh/$< light) 0 -5)
              b (sh/$< upower -i /org/freedesktop/UPower/devices/battery_BAT0)
              batt (match (peg/match capg b)
                     [(s (= s "fully-charged")) e p] "✔"
                     [s e w t p] (string p " " e " " s " to " w " in " t))]
          (print task " | " light "% | " batt " | " ts))
        (print task " \u25F7 " ts))
      (flush)
      (os/sleep 1))))
