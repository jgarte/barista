#!/bin/env janet
(import sh)
(import neil/tell :prefix "")

(defn capt [label]
  ~(* (some (if-not ,label 1)) ,label :s+ '(some (if-not "\n" 1))))

(def capg
  ~(* ,(capt "state:")
      ,(capt "energy-rate:")
      (? ,(capt '(* "time to " (<- (+ "empty" "full")) ":")))
      ,(capt "percentage:")))


(defn main [_ &opt ntb]
  (default ntb false)
  (forever
    (try
      (do
        (def ts (string/trim (sh/$< date)))
        (def task
          (match
            (protect
              (if-let [r (running)]
                (let [[rid {:name n :project pid :work-intervals iw :state s}] r
                      {:name p} (by-id pid)
                      {:start s :note t} (last iw)]
                  (string (durf (- (os/time) s)) " @" p " - #" rid " " n ""))
                (string "Last ran: " (get-in (last-running) [1 :name]))))
            [true m] m
            [false _] "Neil is not running?"))
        (def ut (string "up " ((string/split "up " (string/trim (sh/$< uptime))) 1)))
        (if ntb
          (let [light (string/slice (sh/$< light) 0 -5)
                b (sh/$< upower -i /org/freedesktop/UPower/devices/battery_BAT0)
                batt (match (peg/match capg b)
                       [(s (= s "fully-charged")) e p] "âœ”"
                       [s e w t p] (string p " " e " " s " to " w " in " t))]
            (prin task " | " light "% | " batt " | " ts))
          (prin task " | " ut " | " ts))
        (flush)
        (os/sleep 1))
      ([e] (tracev e) (print "Loading")))))
